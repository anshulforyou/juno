"use strict";(self.webpackChunkjuno_docs=self.webpackChunkjuno_docs||[]).push([[8579],{581:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={slug:"junopi",title:"Running Juno from your Raspberry Pi",authors:["depablos","maceo"],tags:["juno","rpi","raspberry","pi","deploy"]},o=void 0,i={permalink:"/blog/junopi",editUrl:"https://github.com/NethermindEth/juno/tree/main/docs/blog/2022-06-24-junopi/index.mdx",source:"@site/blog/2022-06-24-junopi/index.mdx",title:"Running Juno from your Raspberry Pi",description:"Juno is a node which aims to help decentralise StarkNet, a prominent Ethereum Layer 2.",date:"2022-06-24T00:00:00.000Z",formattedDate:"June 24, 2022",tags:[{label:"juno",permalink:"/blog/tags/juno"},{label:"rpi",permalink:"/blog/tags/rpi"},{label:"raspberry",permalink:"/blog/tags/raspberry"},{label:"pi",permalink:"/blog/tags/pi"},{label:"deploy",permalink:"/blog/tags/deploy"}],readingTime:4.755,hasTruncateMarker:!1,authors:[{name:"Diego de Pablos",title:"Intern at Juno",url:"https://github.com/D-DePablos",imageURL:"https://github.com/D-DePablos.png",key:"depablos"},{name:"Marcos Maceo",title:"StarkNet Core Developer",url:"https://github.com/stdevMac",imageURL:"https://github.com/stdevMac.png",key:"maceo"}],frontMatter:{slug:"junopi",title:"Running Juno from your Raspberry Pi",authors:["depablos","maceo"],tags:["juno","rpi","raspberry","pi","deploy"]},nextItem:{title:"Welcome",permalink:"/blog/welcome"}},s={authorsImageUrls:[void 0,void 0]},p=[{value:"Disclaimer",id:"disclaimer",level:3},{value:"\ud83c\udfaf Features",id:"-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Specification \ud83e\udd16",id:"specification-",level:3},{value:"Get Golang \ud83e\uddab",id:"get-golang-",level:3},{value:"Install Juno \u2699\ufe0f",id:"install-juno-\ufe0f",level:3},{value:"Installing",id:"installing",level:3},{value:"Install Python dependencies",id:"install-python-dependencies",level:4},{value:"Installing Go dependencies",id:"installing-go-dependencies",level:4},{value:"Compile",id:"compile",level:3},{value:"Run",id:"run",level:3},{value:"Configuring Juno",id:"configuring-juno",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Juno is a node which aims to help ",(0,r.kt)("strong",{parentName:"p"},"decentralise StarkNet, a prominent Ethereum Layer 2"),"."),(0,r.kt)("p",null,"For its mission to be achieved, it needs people to ",(0,r.kt)("strong",{parentName:"p"},"start running their own node"),"."),(0,r.kt)("p",null,"To become one of the early few making StarkNet better, read below."),(0,r.kt)("h3",{id:"disclaimer"},"Disclaimer"),(0,r.kt)("p",null,"In this short article we lay out the steps to get a Raspberry PI with a working ",(0,r.kt)("a",{parentName:"p",href:"https://www.raspbian.org/"},"Raspbian"),"\ninstallation to run the Juno StarkNet node. We assume that you have access as a root user to the Pi."),(0,r.kt)("p",null,"At time of writing, ",(0,r.kt)("strong",{parentName:"p"},"both StarkNet and Juno are still in an early release"),". Expect this guide and required steps to change often!"),(0,r.kt)("p",null,"For the latest on the project, check out our ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/NethermindEth/juno"},"Github repo"),", and refer to our\n",(0,r.kt)("a",{parentName:"p",href:"https://gojuno.xyz/"},"Documentation"),"."),(0,r.kt)("p",null,"The disk space issues are currently work in progress, and will be addressed in an upcoming new release."),(0,r.kt)("h2",{id:"-features"},"\ud83c\udfaf Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://gojuno.xyz/docs/features/sync"},"Get and Sync state from Layer 1")," (Ethereum)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://gojuno.xyz/docs/features/sync"},"Get and Sync state from API")," (Feeder Gateway)."),(0,r.kt)("li",{parentName:"ul"},"Store ",(0,r.kt)("a",{parentName:"li",href:"https://gojuno.xyz/docs/features/sync"},"StarkNet State")," locally."),(0,r.kt)("li",{parentName:"ul"},"Store StarkNet Transactions."),(0,r.kt)("li",{parentName:"ul"},"Store StarkNet Blocks."),(0,r.kt)("li",{parentName:"ul"},"Store the ABI and full code of StarkNet contracts."),(0,r.kt)("li",{parentName:"ul"},"Ethereum-like ",(0,r.kt)("a",{parentName:"li",href:"https://gojuno.xyz/docs/features/rpc"},"JSON RPC API")," following\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/starkware-libs/starknet-specs/blob/master/api/starknet_api_openrpc.json"},"this spec"),". Currently\nsupported are:"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_getBlockWithTxHashes")," - Get block information with transaction hashes given the block id."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_getBlockWithTxs")," - Get block information with full transactions given the block id."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_getStateUpdate")," - Get the information about the result of executing the requested block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_getStorageAt")," - Get the value of the storage at the given address and key."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_getTransactionByHash")," - Get the details and status of a submitted transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_getTransactionByBlockIdAndIndex")," - Get the details of a transaction by a given block id and index."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_getTransactionReceipt")," - Get the transaction receipt by the transaction hash."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_getClassHashAt")," - Get the contract class hash in the given block for the contract deployed at the given address."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_getBlockTransactionCount")," -  Get the number of transactions in a block given a block id."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_call")," - Call a StarkNet function without creating a transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_blockNumber")," - Get the most recent accepted block number."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_blockHashAndNumber")," - Get the most recent accepted block hash and number."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_chainId")," - Return the currently configured StarkNet chain id."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_pendingTransactions")," - Returns the transactions in the transaction pool, recognized by this sequencer."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starknet_syncing")," - Returns an object about the sync status, or false if the node is not synching."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://gojuno.xyz/docs/features/metrics"},"Prometheus Metrics"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://gojuno.xyz/docs/running/docker"},"Dockerized app"),".")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("h3",{id:"specification-"},"Specification \ud83e\udd16"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"- Raspberry 4 (model B) - 4GB running Raspbian\n- MicroSD card - 16GB+ (Class 10 Minimum) or SSD\n- Power supply\n- Internet connection (ethernet preferrable)\n- USB keyboard, a monitor, and an HDMI cable to interact with the computer or ssh into the raspberry pi.\n")),(0,r.kt)("h3",{id:"get-golang-"},"Get Golang \ud83e\uddab"),(0,r.kt)("p",null,"Ensure that your Raspberry Pi is up-to-date."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\nsudo apt full-upgrade\n")),(0,r.kt)("p",null,"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://go.dev/dl/"},"Golang download website")," for the latest armv6l version. At time of writing, we would download go 1.18.3."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://go.dev/dl/go1.18.3.linux-armv6l.tar.gz -O go.tar.gz\n")),(0,r.kt)("p",null,"Now extract the tarball into your /usr/local/ directory (root access required)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo tar -C /usr/local -xzf go.tar.gz\n")),(0,r.kt)("p",null,"Add the following to your shell config (usually ~/.bashrc).\nIf you have no preferred text editor, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"nano ~/.bashrc")," to edit your bash config from the terminal."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# ~/.bashrc\nexport GOPATH=$HOME/go\nexport PATH=/usr/local/go/bin:$PATH:$GOPATH/bin\n")),(0,r.kt)("p",null,"Afterwards press ",(0,r.kt)("inlineCode",{parentName:"p"},"CTRL")," + ",(0,r.kt)("inlineCode",{parentName:"p"},"X")," and then ",(0,r.kt)("inlineCode",{parentName:"p"},"Y")," to exit the nano text editor and save the file."),(0,r.kt)("p",null,"Finally, as your ",(0,r.kt)("inlineCode",{parentName:"p"},".bashrc")," is only initialised when the shell is started, you need to source the new ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," to update available commands."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"source ~/.bashrc\n")),(0,r.kt)("p",null,"You should now have a working Golang installation in your Raspberry Pi. You can check it typing:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"go version\n")),(0,r.kt)("h3",{id:"install-juno-\ufe0f"},"Install Juno \u2699\ufe0f"),(0,r.kt)("h3",{id:"installing"},"Installing"),(0,r.kt)("p",null,"Clone the repository:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/NethermindEth/juno\n")),(0,r.kt)("h4",{id:"install-python-dependencies"},"Install Python dependencies"),(0,r.kt)("p",null,"We are currently only support python ",(0,r.kt)("inlineCode",{parentName:"p"},"3.7"),", and we recommend use pyenv. To install it, you can follow this instruction:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install dependencies:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get update\nsudo apt-get install make build-essential git patch zlib1g-dev clang \\\n  openssl libssl-dev libbz2-dev libreadline-dev libsqlite3-dev llvm \\\n  libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev \\\n  liblzma-dev\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Install pyenv:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl https://pyenv.run | bash\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Add the following entries into your ",(0,r.kt)("inlineCode",{parentName:"li"},"~/.bashrc")," file:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'# pyenv\nexport PATH="$HOME/.pyenv/bin:$PATH"\neval "$(pyenv init --path)"\neval "$(pyenv virtualenv-init -)"\n')),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Restart your shell:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"exec $SHELL\n")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Install Python 3.7:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pyenv install 3.7.13\npyenv global 3.7.13\n")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Inside of the project folder, install Python dependencies:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ pip install -r requirenments.txt\n")),(0,r.kt)("h4",{id:"installing-go-dependencies"},"Installing Go dependencies"),(0,r.kt)("p",null,"You can install all golang dependencies running the next command inside the project folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ go get ./...\n")),(0,r.kt)("h3",{id:"compile"},"Compile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ make juno\n")),(0,r.kt)("h3",{id:"run"},"Run"),(0,r.kt)("p",null,"To synchronize with the StarkNet state from the centralized feeder gateway, run the following\ncommand:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# For Ethereum Goerli testnet\n$ ./build/juno\n\n# For Ethereum Mainnet\n$ ./build/juno --netowrk 1\n")),(0,r.kt)("p",null,"To sync the state without relying on the feeder gateway, configure an Ethereum node and run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# For Ethereum Goerli testnet\n$ ./build/juno --eth-node "<node-endpoint>"\n\n# For Ethereum Mainnet\n$ ./build/juno --netowrk 1 --eth-node "<node-endpoint>"\n')),(0,r.kt)("p",null,"To view other available options please run ",(0,r.kt)("inlineCode",{parentName:"p"},"./build/juno -h"),"."),(0,r.kt)("p",null,"For more configuration details, check the ",(0,r.kt)("a",{parentName:"p",href:"/docs/running/config"},"config description"),"."),(0,r.kt)("h2",{id:"configuring-juno"},"Configuring Juno"),(0,r.kt)("p",null,"When syncing the StarkNet state from a Raspberry Pi, we expect you to have at least 64GB. In case of you don't have\nthis space, you can run it using an SSD, ensuring that the property ",(0,r.kt)("inlineCode",{parentName:"p"},"db-path")," in the config or the flag ",(0,r.kt)("inlineCode",{parentName:"p"},"--db-path"),"\npoints to the external SSD:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# juno.yaml\ndb-path: /path/to/ssd/database/here\n")),(0,r.kt)("p",null,"And yes, you are now helping on the StarkNet decentralisation!"))}c.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),h=r,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||l;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);